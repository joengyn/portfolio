---
import Layout from '../layouts/Layout.astro';
import ProjectCard from '../components/ProjectCard.astro';
import { Image } from 'astro:assets';
import ensoCircle from '../../public/enso-circle.webp';
import StructuredData from '../components/StructuredData.astro';
import projectsData from '../data/projects.json';

const websiteSchema = {
  "@context": "https://schema.org",
  "@type": "WebSite",
  "name": "Joe Nguyen Portfolio",
  "url": "https://joengyn.com",
  "author": {
    "@type": "Person",
    "name": "Joe Nguyen",
    "jobTitle": "Designer & Engineer"
  },
  "description": "Portfolio showcasing UX/UI design and frontend development work"
};

const imageModules = import.meta.glob('../assets/**/*.{webp,png,jpg,svg}');

const visibleProjects = (
  await Promise.all(
    projectsData
      .filter((project) => project.isVisible)
      .map(async (project) => {
        const bgPath = project.bgImg;
        const uiPaths = project.uiImgs || [];

        if (!imageModules[bgPath]) {
          console.error(`BG Image module not found for: ${bgPath} in project: ${project.title}`);
          return null;
        }

        const allUiPathsExist = uiPaths.every((path: string) => imageModules[path]);
        if (!allUiPathsExist) {
          console.error(`One or more UI image paths missing for project: ${project.title}`);
          return null;
        }

        const bgImgModule = (await imageModules[bgPath]()) as any;
        const uiImgModules = await Promise.all(uiPaths.map((path: string) => imageModules[path]()));

        return {
          ...project,
          bgImg: bgImgModule.default,
          uiImgs: uiImgModules.map((mod: any) => mod.default),
        };
      }),
  )
).filter(Boolean);
---

<Layout
  title='Joe Nguyen | Designer & Engineer'
  description='Portfolio of Joe Nguyen - UX/UI Designer and Frontend Developer showcasing design and engineering projects in robotics, music tech, and mobile applications.'
>
  <StructuredData slot="structured-data" schema={websiteSchema} />
  <main class='mx-4 mb-10 mt-[80px] grid gap-5'>
    <!-- Intro Section -->
    <div class='flex pt-3 sm:flex-col sm:items-center sm:text-center'>
      <!-- Text -->
      <div class='flex w-1/2 flex-col justify-center sm:mb-20 sm:w-full'>
        <div class='mb-5 text-lg font-bold'>Designer & Engineer</div>
        <p class='mb-0 text-lg'>
          Passionate about the space where people and technology meet.
        </p>
      </div>
      <!-- Logo -->
      <div
        class='my-auto w-1/2 max-w-[300px] sm:order-first flex items-center justify-center py-10'
      >
        <Image src={ensoCircle} alt='Enso Circle Logo' class='h-32 w-32 dark:invert' />
      </div>
    </div>
    <!-- Case Studies Section -->
    <div class='mx-auto mb-10 grid max-w-screen-md gap-10 sm:grid-cols-2'>
      {visibleProjects.map((project) =>
        project ? (
          <ProjectCard
            href={project.href}
            title={project.title}
            body={project.body}
            bgImg={project.bgImg}
            uiImgs={project.uiImgs}
            className={project.className}
          />
        ) : null,
      )}
  </main>
</Layout>
