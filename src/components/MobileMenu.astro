---
import Button from './Button.astro';
import resume from '../../public/resume.pdf';
---

<div
  class='mobile-menu fixed right-0 top-0 z-50 flex h-screen w-1/2 translate-x-full flex-col gap-10 bg-darkGray p-4 pt-10 text-right text-white md:hidden'
  id='mobile-menu'
  role='navigation'
  aria-label='Mobile navigation'
  inert
>
  <!-- Close Button -->
  <button
    type='button'
    aria-label='Close navigation menu'
    class='self-end p-1'
    id='close-menu'
    tabindex="-1"
  >
    <span aria-hidden='true' class='relative h-6 w-6 block flex items-center justify-center'>
      <!-- Diagonal Line 1 -->
      <span class='absolute h-1 w-full rotate-45 bg-white'></span>
      <!-- Diagonal Line 2 -->
      <span class='absolute h-1 w-full -rotate-45 bg-white'></span>
    </span>
  </button>
  <!-- Menu Links -->
  <a
    class='menu-link w-min ml-auto translate-x-full text-xl font-bold tracking-widest transition-transform delay-100 duration-1000'
    href='/'
    tabindex="-1"
  >work</a
  >
  <a
    class='menu-link w-min ml-auto translate-x-full text-xl font-bold tracking-widest transition-transform delay-300 duration-1000'
    href='/about'
    tabindex="-1"
  >about</a
  >
  <a
    class='menu-link w-min ml-auto translate-x-full text-xl font-bold tracking-widest transition-transform delay-500 duration-1000'
    target='_blank'
    href={resume}
    tabindex="-1"
  >resume</a
  >
  <a
    class='menu-contact w-min ml-auto translate-y-5 opacity-0 transition-all delay-700 duration-1000 flex min-w-12 items-center gap-2 rounded-sm border-2 border-black px-4 py-2 shadow-[3px_3px_0px_1px_black] transition-colors duration-300 ease-in-out hover:bg-darkGray hover:text-white bg-lightGray text-[12px] font-bold uppercase tracking-widest text-black'
    href='mailto:joe.ngyn7@gmail.com'
    tabindex="-1"
  >
    Contact
  </a>
</div>

<style>
  .menu-link:focus-visible {
    outline: 2px solid white;
    outline-offset: 4px;
    border-radius: 2px;
  }

  .menu-contact:focus-visible {
    outline: 2px solid white;
    outline-offset: 4px;
  }

  #close-menu:focus-visible {
    outline: 2px solid white;
    outline-offset: 2px;
    border-radius: 2px;
    display: flex;
    align-items: center;
    justify-content: center;
  }
</style>

<script>
  const closeMenu = document.getElementById('close-menu');
  const menu = document.querySelector('.mobile-menu');
  const menuLinks = document.querySelectorAll('.menu-link');
  const menuButton = document.querySelector('.menu-button');
  const menuContact = document.querySelector('.menu-contact');

  // Close on X Click
  if (closeMenu) {
    closeMenu.addEventListener('click', () => {
      if (menu) {
        menu.setAttribute('inert', '');
        menu.classList.add('translate-x-full');
      }
      if (menuLinks) {
        menuLinks.forEach((link) => {
          link.classList.add('translate-x-full');
        });
      }
      if (menuContact) {
        menuContact.classList.remove('opacity-100');
        menuContact.classList.remove('translate-y-0');
        menuContact.classList.add('opacity-0');
        menuContact.classList.add('translate-y-5');
      }
      // Update aria-expanded and tabindex in Header
      if (menuButton) {
        menuButton.setAttribute('aria-expanded', 'false');
      }
    });
  }

  // Close on Link Click
  if (menuLinks) {
    menuLinks.forEach((link) => {
      link.addEventListener('click', () => {
        if (menu) {
          menu.setAttribute('inert', '');
          menu.classList.add('translate-x-full');
        }
        if (menuLinks) {
          menuLinks.forEach((link) => {
            link.classList.add('translate-x-full');
          });
        }
        if (menuContact) {
          menuContact.classList.remove('opacity-100');
          menuContact.classList.remove('translate-y-0');
          menuContact.classList.add('opacity-0');
          menuContact.classList.add('translate-y-5');
        }
        // Update aria-expanded and tabindex in Header
        if (menuButton) {
          menuButton.setAttribute('aria-expanded', 'false');
        }
      });
    });
  }

  // Close on Outside Click
  if (menu) {
    document.addEventListener('click', (event) => {
      const target = event.target;
      if (!menuButton) {
        console.warn('Menu button not found');
        return; // Exit if the menu button is not found
      }

      if (
        target instanceof Element &&
        !menu.contains(target) &&
        !menuButton.contains(target)
      ) {
        menu.setAttribute('inert', '');
        menu.classList.add('translate-x-full');
        if (menuButton) {
          menuButton.setAttribute('aria-expanded', 'false');
        }
        if (menuLinks) {
          menuLinks.forEach((link) => {
            link.classList.add('translate-x-full');
          });
        }
        if (menuContact) {
          menuContact.classList.remove('opacity-100');
          menuContact.classList.remove('translate-y-0');
          menuContact.classList.add('opacity-0');
          menuContact.classList.add('translate-y-5');
        }
      }
    });
  }

  // Close on Escape key
  document.addEventListener('keydown', (event) => {
    if (event.key === 'Escape' && menu) {
      const isOpen = !menu.classList.contains('translate-x-full');
      if (isOpen) {
        menu.setAttribute('inert', '');
        menu.classList.add('translate-x-full');
        if (menuButton) {
          menuButton.setAttribute('aria-expanded', 'false');
        }
        if (menuLinks) {
          menuLinks.forEach((link) => {
            link.classList.add('translate-x-full');
          });
        }
        if (menuContact) {
          menuContact.classList.remove('opacity-100');
          menuContact.classList.remove('translate-y-0');
          menuContact.classList.add('opacity-0');
          menuContact.classList.add('translate-y-5');
        }
      }
    }
  });
</script>
